dc-chain 0.3
------------

This package contains a Makefile which both simplifies building the Dreamcast
toolchain, and gives you substantial control.

On the minimum hassle side, 'make' will patch everything (using patches/*.diff)
and build both the sh and arm toolchains.  'make erase=1' will erase the build
directories as they become safe to delete, to save space.  And as for a more
complex example, 'make patch-gcc build-sh4-gcc-pass1 thread_model=single' will
build a patched, single-threaded sh4 gcc pass 1 compiler.  Please see the
comments at the top of the Makefile for more options.

Before you start, change the variables in the User Configuration section to
match your environment.  They can be overridden at the command line as well.

Then untar your binutils, gcc-core, and optionally newlib and gcc-g++
distributions into this directory (or copy Makefile and patches/ into your
build directory.)  Also, ensure the KOS distribution is unpacked, and set 
its path in the Makefile, because some KOS includes are copied over to newlib.

Finally, run make.  If anything goes wrong, check the output in logs/.

Some patches are included in this package as well.  As of this writing,
they patch newlib-2.0.0 and gcc-4.7.3 to work with KOS.

You should not attempt to spawn multiple jobs with make. Using "make -j2" or any
other number after the -j will probably break things. There is however now an
option inside the Makefile to set the number of jobs for the building phases.
Set the makejobs variable in the Makefile to whatever you would normally feel
the need to use on the command line, and it will do the right thing.
